--Link: https://www.codewars.com/kata/5821ee33ec380124f1000013/train/sql

--Your company has an internal policy to determine your customers' credit limit, 
--    but this procedure has been questioned recently by the board as being too conservative.
--Your CEO wants to increase the current customer base credit limits
--    in order to upsell a new line of products. 
--In order to do that, the company hired several external consultancies to produce new credit limit estimates.
--The problem is that each agency has produced the report in its own format. 
--Some use the format "First-name Last-name" to identify a person,
--    others use the format "Last-name, First-name". 
--There is also no consensus on how to capitalize each word, so some used all uppercase,
--    others used all lowercase, and some used mixed-case.

--Internally, the data is structured as follows:
--Customers Table: id INT, first_name TEXT, last_name TEXT, credit_limit FLOAT

--The data you've received from all agencies was consolidated in the following table:
--Prospects Table: full_name TEXT, credit_limit FLOAT

--Keep in mind that the agencies had access only to a partial customer base. 
--There is also the possibility of more than one agency prospecting the same customer,
--    so it's highly likely that there will be duplicates. 
--Finally, they've prospected customers that were not in your customer base as well.
--For this task you are interested in the prospected customers that are already in your customer base
--    and the prospected credit limit is higher than your internal estimate. 
--When more than one agency prospected the same customer, chose the highest estimate.

--Results Table: first_name, last_name, old_limit [the current credit_limit], new_limit [the highest credit_limit found]
--Notes: only list the customers that a higher credit limit was found.

--Best Solution:

SELECT c.first_name
     , c.last_name
     , c.credit_limit as old_limit
     , max(p.credit_limit) as new_limit
  FROM customers c
     , prospects p
 WHERE upper(c.first_name) || ' ' || upper(c.last_name) = upper(p.full_name)
    OR upper(c.Last_name) || ', ' || upper(c.first_name) = upper(p.full_name)
 GROUP BY c.first_name, c.last_name, c.credit_limit
HAVING max(p.credit_limit) > c.credit_limit
 ORDER BY c.first_name, c.last_name


-- My working Solution:
SELECT
  customers.first_name
  ,customers.last_name
  ,customers.credit_limit as old_limit 
  ,case
     when customers.credit_limit > prospects.new_limit then credit_limit
     else new_limit
   end as new_limit
FROM customers
LEFT JOIN (
  SELECT
    CASE
      WHEN full_name like '%,%' THEN name[2]||' '||name[1]
      ELSE name[1]||' '||name[2]
    END AS name
    , MAX(new_limit) AS new_limit
  FROM(
    SELECT
      string_to_array(regexp_replace(
        lower(full_name),
        '((^)(mr\.|mrs\.|dr\.|ms\.|miss)(\s))|((\s)(dvm|i|ii|iii|iv|v|jr\.|sr\.|md|phd|dds)($))|(\,)',
        ''
      ),' ') AS name
      , lower(full_name) AS full_name
      , max(credit_limit) new_limit
    FROM prospects
    GROUP BY 1,2
  )x
  GROUP BY 1
) prospects
 ON lower(customers.first_name)||' '||lower(customers.last_name) = prospects.name
WHERE customers.credit_limit < prospects.new_limit
;
